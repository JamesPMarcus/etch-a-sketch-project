diff --git a/etch-a-sketch.js b/etch-a-sketch.js
index 1050302..ec4a90b 100644
--- a/etch-a-sketch.js
+++ b/etch-a-sketch.js
@@ -1,34 +1,38 @@
 // Etch-a-sketch js 
 //jquery is also used in this code
 //function for creating a grid, num is designate rows + columns
+//returns a promise so we can know when the dom is done being created
 function createGrid(num) {
-    var container = $("#container");
-    var overlay = $('.loading-overlay');
-    var containerWidth = container.width();
-    var containerHeight = container.height();
+    var promise = new Promise(function(resolve, reject) {
+        var container = $("#container");
+        var overlay = $('.loading-overlay');
+        var containerWidth = container.width();
+        var containerHeight = container.height();
 
-    overlay.removeClass('hidden');
+        overlay.removeClass('hidden');
 
-    if (containerWidth > containerHeight) {
-        container.width(containerHeight);
-    } else {
-        container.height(containerWidth);
-    }
-
-    //defer the execution of the grid calculations to allow the DOM to refresh with loading
-    //Promises might be a better solution
-    setTimeout(function() {
-        for (var rows = 0; rows < num; rows++) {
-            var row = $("<div class='row'></div>")
-            for (var columns = 0; columns < num; columns++) {
-                row.append("<div class='grid'></div");
-            }
-            container.append(row);
+        if (containerWidth > containerHeight) {
+            container.width(containerHeight);
+        } else {
+            container.height(containerWidth);
         }
 
-        overlay.addClass('hidden');
-    }, 0);
+        //defer the execution of the grid calculations to allow the DOM to refresh with loading
+        //Promises might be a better solution
+        setTimeout(function() {
+            for (var rows = 0; rows < num; rows++) {
+                var row = $("<div class='row'></div>")
+                for (var columns = 0; columns < num; columns++) {
+                    row.append("<div class='grid'></div");
+                }
+                container.append(row);
+            }
 
+            overlay.addClass('hidden');
+            resolve();
+        }, 0);
+    });
+    return promise;
 }
 
 //function to clear grid
@@ -42,7 +46,16 @@ function refreshGrid() {
 
     var dime = prompt("Choose your new dimensions");
     gridClear();
-    createGrid(dime);
+    var promise = createGrid(dime);
+
+    promise.then(setupMouseOver.bind(this));
+}
+
+//Setup the mouseOver event on the grid class items
+function setupMouseOver() {
+    $('.grid').mouseover(function() {
+        $(this).addClass('hovered');
+    });
 }
 
 //create a 16x16 grid when page loads
@@ -50,12 +63,7 @@ function refreshGrid() {
 //click of button to refrhesh Grid and ask for new dimensions
 $(document).ready(function() {
 
-    createGrid(16);
-
-    $('.grid').mouseover(function() {
-        $(this).addClass('hovered');
-    });
-
+    var promise = createGrid(16);
 
     $('.but').click(function() {
         refreshGrid();
@@ -64,4 +72,12 @@ $(document).ready(function() {
             $(this).css('background-color', 'black');
         });
     });
+
+    //this function could also be written as:
+    // promise.then(function() {
+    //     setupMouseOver();
+    // })
+    //The .bind is a shorter way of writting a function that just calls another function
+    //passing in "this" just sets the scope of the function
+    promise.then(setupMouseOver.bind(this));
 });
\ No newline at end of file
